"0","```r
wideIDfeatures <- wide_cellID_geomFeature
chosenFeature <- \"Eccentricity\"

head(wideIDfeatures)

pairedOPM_CCF <- function(wideIDfeatures){

final_df_particular_CCF_Object <- data.frame()  
  
  library(stringr)  
  #one liner to get unique cellIDs Features from colnames of wide dataframe
  listOfccfCellIDs <- unique(as.data.frame(str_split_fixed(colnames(wideIDfeatures[-1]), \"_FeatureID_\",2))[,1]) # about 250 cells
  
  listOFccFFeatures <- unique(as.data.frame(str_split_fixed(colnames(wideIDfeatures[-1]), \"_FeatureID_\",2))[,2])
  listOFccFFeatures
  #select only features that are present for BOTH cell and nucleus
  # nc_listOFccFFeatures <- listOFccFFea
  
  nc_listOFccFFeatures <-  as.data.frame(listOFccFFeatures) %>%
    dplyr::filter(grepl(\"_cell|_nucleus\",listOFccFFeatures))
  
  nc_listOFccFFeatures
#remove nucleus and cell from feature names

  sub_nc_listOFccFFeatures <- gsub(\"_nucleus|_cell\",\"\",nc_listOFccFFeatures$listOFccFFeatures)
  
#reassign list of features
  vector_nc_listOFccFFeatures <- sub_nc_listOFccFFeatures

  #make unique as features duplicated due to removal of Cell/nucleus suffix  29/11/21
  vector_nc_listOFccFFeatures <- unique(vector_nc_listOFccFFeatures)
  
  #loop through feature in list
  for(sub_chosenFeature in vector_nc_listOFccFFeatures){
  
  an_chosenFeatureCell <- paste0(sub_chosenFeature,\"_cell\")
  an_chosenFeatureNucleus <- paste0(sub_chosenFeature,\"_nucleus\")
  #now paste rownames back onto feature of interest
  
#Loop through all features
  
  
#Loop through all cells
for(cellID in listOfccfCellIDs){
 
    print(paste(\"STARTing cell..\",cellID, \" With feature...\",sub_chosenFeature))
  
  
lookupCell <-   paste0(cellID,'_FeatureID_',an_chosenFeatureCell)
lookupNucleus <-  paste0(cellID,'_FeatureID_',an_chosenFeatureNucleus)
     
  #subset by column name
    
library(dplyr)
#NB Using \"pull\" here to make data into vector isntead of dataframe but this function might be slow
  chosenTSone_y_cell <- pull(wideIDfeatures[,lookupCell])
  # chosenTSone_y_cell
  choseTStwo_x_nucleus <- pull(wideIDfeatures[,lookupNucleus])
  
  
  
  #generate CCF
  particularCellFeatureCCF <- ccf(chosenTSone_y_cell, choseTStwo_x_nucleus, plot = FALSE, na.action = na.pass)
  str(particularCellFeatureCCF)

  #make an object ID
# particular_CCF_ObjectID <- rep(paste)

anCCF_ACF <- particularCellFeatureCCF$acf
anCCF_LAG <- particularCellFeatureCCF$lag

an_CCF_ObjectID <- paste(rep(cellID, length(particularCellFeatureCCF$lag)))
an_CCF_Feature <- sub_chosenFeature

# particular_acfObjectTreatment <- rep(rep(paste(titlePlot), length(particular_acfObject$acf))) 
particular_CCF_Object_output <- data.frame(anCCF_ACF , anCCF_LAG, an_CCF_ObjectID, an_CCF_Feature)

print(paste(\"adding Cell to dataframe...\",cellID))
final_df_particular_CCF_Object <- rbind(final_df_particular_CCF_Object, particular_CCF_Object_output)
    print(paste(\"ENDing cell..\",cellID, \" With feature...\",sub_chosenFeature))

}
  

  }
return(final_df_particular_CCF_Object)
  }
# final_df_particular_CCF_Object
# wide_cellID_geomFeature

# for(cell in ListOfAllCells)
# wide_cellID_geomFeature
```"
